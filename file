#include <bits/stdc++.h>
#include <iostream>
#include <string>
#include <fstream>
#include <cctype>
#include <cstring>
using namespace std;
void Merge(fstream &dataFile);
void count_Words(fstream &dataFile);
void count_Chars(fstream &dataFile);
void count_Lines(fstream &dataFile);
void search_Word(fstream &dataFile);

ifstream myfile; // file from kind ifstream to read the file.
char file_name[100]; // file name from char data type to input file name.
void the_words_repeated();
void creat_file();
void convert_the_all_letters_to_lower_case();
void convert_the_all_letters_to_upper_case();
void First_Char_Capitalize();
void save();

int main()
{
    creat_file();// this function to exist file if not found it create new file.
    fstream dataFile;
    cout << "Ahlan ya user ya habibi :D\n";
    cout << "Please select what you want or enter 16 to exit: \n";
    cout << "1- Add new text to the end of the file\n";
    cout << "2- Display the content of the file\n";
    cout << "3- Empty the file\n";
    cout << "4- Encrypt the file content\n";
    cout << "5- Decrypt the file content\n";
    cout << "6- Merge another file\n";
    cout << "7- Count the number of words in the file.\n";
    cout << "8- Count the number of characters in the file\n";
    cout << "9- Count the number of lines in the file\n";
    cout << "10- Search for a word in the file\n";
    cout << "11- Count the number of times a word exists in the file\n";
    cout << "12- Turn the file content to upper case\n";
    cout << "13- Turn the file content to lower case\n";
    cout << "14- Turn file content to 1st caps (1st char of each word is capital)\n";
    cout << "15- Save\n";
    cout << "16- Exit\n";
    // choose number.
    int num_of_filter;
    cin.ignore(99999, '\n'); // Validate the input.
    cin.clear();
    string get_num;
    while (true)
    {
        getline(cin, get_num);
        if (get_num == "1" || get_num == "2" || get_num == "3" || get_num == "4" || get_num == "5" || get_num == "6" || get_num == "7" || get_num == "8" || get_num == "9" || get_num == "10" || get_num == "11" || get_num == "12" || get_num == "13" || get_num == "14" || get_num == "15" || get_num == "16")
        {
            num_of_filter = stoi(get_num);
            break;
        }
        else
        {
            cout << "INVALD\n";
        }
    }

    // if (num_of_filter == 1)
    // {

    // }
    // if (num_of_filter == 2)
    // {

    // }
    // if (num_of_filter == 3)
    // {

    // }
    // if (num_of_filter == 4)
    // {

    // }
    // if (num_of_filter == 5)
    // {

    // }
    if (num_of_filter == 6)
    {
        Merge(dataFile);
    }
    if (num_of_filter == 7)
    {
        count_Words(dataFile);
    }

    if (num_of_filter == 8)
    {
        count_Chars(dataFile);
    }
    if (num_of_filter == 9)
    {
        count_Lines(dataFile);
    }
    if (num_of_filter == 10)
    {
        search_Word(dataFile);
    }
     if (num_of_filter == 11)
     {
        the_words_repeated();
     }
     if (num_of_filter == 12)
     {
         convert_the_all_letters_to_upper_case();
     }
     if (num_of_filter == 13)
     {
        convert_the_all_letters_to_lower_case();
     }
     if (num_of_filter == 14)
     {
        First_Char_Capitalize();
     }
     if (num_of_filter == 15)
     {
        save();
     }
    if (num_of_filter == 16)
    {
        return 1;
    }
    return 0;

}


// this function to exist file if not found it create new file.
void creat_file() {
    cout << "please enter the name of the file : ";
    cin >> file_name; //file name from char data type to input file name.

    myfile.open(file_name); // to make file in open mood and if it found doing in if condition.
    if (myfile) {
        cout << "This File Already Exists" << endl;
        cout << endl;
    }
    else {
        //if it not found doing in else condition.
        cout << "This is a new file. I created it for you " << endl;
        myfile.open(file_name, ios::out | ios::app);
    }
}



void search_Word(fstream &dataFile)
{
    cout << "Enter the word: ";
    string search1;
    string new_str = "";
    cin >> search1;
    bool find = false;
    for (int i = 0; i < search1.length(); i++)
    {
        search1[i] = (char)tolower(search1[i]);
    }
    while (getline(dataFile, new_str))
    {
        for (int i = 0; i < new_str.length(); i++)
        {
            new_str[i] = (char)tolower(new_str[i]);
        }
        if (new_str.find(search1) != -1)
        {
            cout << "The Word was found in the file. :'D\n";
            find = true;
            break;
        }
    }
    if (!find)
        cout << "The word was not found in the file. :(\n";
}

void count_Lines(fstream &dataFile)
{
    string new_str = "";
    int tot_Lines = 0;
    int i = 0;
    while (dataFile.peek() != EOF)
    {
        new_str += dataFile.get();
    }
    while (new_str[i] != '\0')
    {
        if (new_str[i] == '\n')
            ++tot_Lines;
        i++;
    }
    ++tot_Lines;
    cout << "The number of lines in the file is: " << tot_Lines << '\n';
}
void count_Chars(fstream &dataFile)
{
    string new_str = "";
    int num = 0;
    string enter;
    int option;
    cout << "Choose what you want: \n";
    cout << "1- Count the number of characters without spaces.\n";
    cout << "2- Count the number of characters with spaces.\n";
    while (true)
    {
        getline(cin, enter);
        if (enter == "1" || enter == "2")
        {
            option = stoi(enter);
            break;
        }
        else
        {
            cout << "INVALD\n";
        }
    }
    if (option == 1)
    {
        while (getline(dataFile, new_str))
        {
            for (int i = 0; i < new_str.length(); i++)
            {
                if ((int)new_str[i] != 32)
                    ++num;
            }
        }
        cout << "The number of characters without spaces in the file is: " << num << '\n';
    }
    if (option == 2)
    {
        while (getline(dataFile, new_str))
        {
            for (int i = 0; i < new_str.length(); i++)
            {
                ++num;
            }
        }
        cout << "The number of characters with spaces in the file is: " << num << '\n';
    }
}
void count_Words(fstream &dataFile)
{
    string new_str = "";
    int tot_Words = 0;
    int i = 0;
    while (dataFile.peek() != EOF)
    {
        new_str += dataFile.get();
    }
    while (new_str[i] != '\0')
    {
        if ((new_str[i] == ' ' && new_str[i + 1] != ' ' && new_str[i + 1] != '\n') || (new_str[i] == '\n' && new_str[i + 1] != '\n' && new_str[i + 1] != ' '))
        {
            ++tot_Words;
        }
        ++i;
    }
    cout << "The number of words in the file is: " << tot_Words << '\n';
}
void Merge(fstream &dataFile)
{
    fstream dataFile2;
    char name[80];
    string new_str = "";
    cout << "Pls input an existing file name: ";
    cin >> name;
    string file1 = name;
    int i = 0;
    if (file1.find(".txt") == -1)
    {
        file1 = strcat(name, ".txt");
    }
    dataFile2.open(file1);
    if (dataFile2.fail())
    {
        cout << "This File doesn't Exists.\n";
    }
    else
    {
        cout << "This File Already Exists.\n ";

        while (dataFile2.peek() != EOF)
        {
            new_str += dataFile2.get();
        }
        while (new_str[i] != '\0')
        {
            dataFile << new_str[i];
            ++i;
        }
    }
    dataFile2.close();
}


//Count the number of times a word exists in the file takes from the user a word and prints the number of times the word exists in the file.
void the_words_repeated()
{
    ifstream myfile; // file from kind ifstream to read the file.
//    char name_files[100]; // file name from char data type to input file name.
    int counter = 0; // this counter to calc how many the word is repeated.

//    cout << "enter the source file name with extension (like files.txt): " << endl;
//    cout << "NAME_OF_FILE: " << " ";
//    cin >> name_files; // file name do you want to read from it

    myfile.open(file_name);
    if (!myfile.is_open()) { // if the file not open this message is appear.
        cout << "error in opening source file: ";
    }

    string word, text; // text the word you want to know how many it repeated and the word is variable to store the word in this variable
    cout << "enter your word do you want how many repeated: " << endl;
    cout << "THE WORD: ";
    cin >> text;
    while (myfile >> word) // files is the file will read from it.
    {
        if (word == text) {
            counter++; // counter = + counter + 1.. to calc how many the word repeated.
        }
    }
    cout << "THE NUMBER OF WORD REPETITION : " <<" "<< counter; // print the number of word repeated.
}

// this function to change all character to capital.
void convert_the_all_letters_to_upper_case()
{
    char text_file; // the text in the file.
    string text_file2; //the variable to store the text_file to text_file2.
    text_file2 = "";
    ifstream myfile;
    ofstream myfile2;

    myfile.open(file_name, ios::out | ios::app); // using the mood out to read from file and append to add to the same file.
    system("cls");
    while (!myfile.eof()) { // if i didn't move to the end countine in the loop.

        // when you meet char change it to capital if space ignore the space.
        myfile.get(text_file);
        text_file2 = text_file2 + char(toupper(text_file));
    }
    myfile2.open(file_name, ios::trunc);// mood trunc to remove the all old things and put the new edition.
    myfile2 << text_file2; // to print in the file new edition
    cout << "Done!!" << endl;
}

// this function to change all character to small.
void convert_the_all_letters_to_lower_case()
{
    char text_file;// the text in the file.
    string text_file2;//the variable to store the text_file to text_file2.
    text_file2 = "";
    ifstream myfile;
    ofstream myfile2;

    myfile.open(file_name, ios::out | ios::app);// using the mood out to read from file and append to add to the same file.
    system("cls");
    while (!myfile.eof()) {// if i didn't move to the end countine in the loop.

        // when you meet char change it to small if space ignore the space.
        myfile.get(text_file);
        text_file2 = text_file2 + char(tolower(text_file));
    }
    myfile2.open(file_name, ios::trunc);// mood trunc to remove the all old things and put the new edition.
    myfile2 << text_file2; // to print in the file new edition
    cout << "Done!!" << endl;
}

void First_Char_Capitalize()
{
    char text_file;// the text in the file.
    string text_file2;//the variable to store the text_file to text_file2.
    int counter;// this counter to make loop to all the text in the file.
    int counter2;
    counter = 0;
    counter2 = 0;
    text_file2 = "";
    ifstream myfile;
    ofstream myfile2;
    myfile.open(file_name, ios::out | ios::app);// using the mood out to read from file and append to add to the same file.
    system("cls");
    while (!myfile.eof()) {// if i didn't move to the end countine in the loop.

        myfile.get(text_file);
        if (counter == 0 || counter2 == counter) { // if the counter == counter2 this mean he is found space he is going to second condition
            // the  second condition mean if he meet space ignore it and change the first char to capital and the all char in word to small.
            text_file2 = text_file2 + char(toupper(text_file));
            counter++;
            continue;
        }
        if (text_file == 32) {
            text_file2 = text_file2 + char(text_file);
            counter2 = counter;
            continue;
        }
        text_file2 = text_file2 + char(text_file);
    }
    myfile2.open(file_name, ios::trunc);// mood trunc to remove the all old things and put the new edition.
    myfile2 << text_file2;
    cout << "Done!!" << endl;
}

// function to doing save the file in to another file .
void save() {
    string new_name; // the new file you will store inside.
    char content; // content in the old file.
    string content2; // content in the new file.
    ifstream myfile;
    ofstream myfile2;

    myfile.open(file_name, ios::out | ios::app);// using the mood out to read from file and append to add to the another file.
    system("cls");
    cout << "please enter the new name of the file : ";
    cin.ignore(); // enter the file name you want to paste your info.
    getline(cin, new_name);
    while (!myfile.eof()) {// if i didn't move to the end countine in the loop.

        // move the content from old file to new file.
        myfile.get(content);
        content2 = content2 + char(content);
    }
    myfile2.open(new_name, ios::out | ios::app);// using the mood out to read from old file and append to add to the new file.
    myfile2 << content2;
    cout << "Done!!"<<endl;
}